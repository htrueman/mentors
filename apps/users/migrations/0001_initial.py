# Generated by Django 2.1.1 on 2018-11-12 12:24

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.constants
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('mentors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Is the user account currently active', verbose_name='active')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(0, 'govern_user'), (1, 'mentor'), (2, 'social_service_center'), (3, 'public_service'), (4, 'organization'), (5, 'child_service'), (6, 'volunteer'), (7, 'social_policy_ministry')])),
                ('user_master_key', models.CharField(blank=True, default='', max_length=12)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChildService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='mentorees/coordinator_images')),
                ('full_name', models.CharField(max_length=256)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')]), size=None)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('address', models.CharField(max_length=512)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')]), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SocialServiceCenterAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('mentor_help_description', models.TextField(blank=True, null=True)),
                ('mentor_pair_help_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialServiceCenterReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')])),
                ('city', models.CharField(max_length=64)),
                ('mentoring_popularization', models.BooleanField(default=True)),
                ('master_classes_names', models.CharField(max_length=512)),
                ('profession_name', models.CharField(max_length=128)),
                ('profession_company_name', models.CharField(max_length=128)),
                ('profession_company_address', models.CharField(max_length=256)),
                ('financial_support', models.BooleanField(default=True)),
                ('another_assistance_ways_names', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='GovernUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('status', models.CharField(choices=[('NOT_SPECIFIED', 'Не визначений'), ('PASSED_INFO_MEETING', 'Пройшов інфо-зустріч'), ('PASSED_TRAINING', 'Пройшов тренінг'), ('REJECTED_TO_BE_MENTOR', 'Відмовився бути наставником'), ('PASSED_INTERVIEW_WITH_PSYCHOLOGIST', 'Пройшов співбесіду з психологом'), ('SELECTED_FOR_MENTOREE', 'Підібраний для вихованця'), ('ACTIVE_INTERACTION', 'Активна взаємодія'), ('PAIR_DISBANDED', 'Пара розформована')], default=users.constants.MentorStatuses('Не визначений'), max_length=64)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('date_of_birth', models.DateField()),
                ('actual_address', models.CharField(max_length=521)),
                ('questionnaire_creation_date', models.DateField()),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')])),
                ('profile_image', models.ImageField(upload_to='mentors/profile_images')),
                ('licenced', models.BooleanField(default=False)),
                ('coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentors', to='users.Coordinator')),
                ('licence_key', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentors.MentorLicenceKey')),
                ('mentoree', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentors.Mentoree')),
            ],
        ),
        migrations.CreateModel(
            name='PublicService',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=128)),
                ('profile_image', models.ImageField(upload_to='public_services/profile_images')),
                ('max_pair_count', models.PositiveSmallIntegerField(default=1)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')])),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=512)),
                ('website', models.URLField()),
                ('status', models.CharField(choices=[('NOT_SPECIFIED', 'Не визначений'), ('KNOW_ABOUT_EXISTING', 'Знаємо про її існування'), ('COOPERATION_AGREEMENT', 'Домовленість про співпрацю'), ('CONTRACT_SIGNED', 'Підписаний договір')], default=users.constants.PublicServiceStatuses('Не визначений'), max_length=64)),
                ('contract_number', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialServiceCenter',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=256)),
                ('city', models.CharField(max_length=256)),
                ('address', models.CharField(max_length=512)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='\\+?1?\\d$')]), size=None)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='socialservicecenterreport',
            name='ssc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.SocialServiceCenter'),
        ),
        migrations.AddField(
            model_name='socialservicecenterassessment',
            name='mentor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Mentor'),
        ),
        migrations.AddField(
            model_name='socialservicecenterassessment',
            name='ssc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.SocialServiceCenter'),
        ),
        migrations.AddField(
            model_name='publicservice',
            name='social_service_center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.SocialServiceCenter'),
        ),
        migrations.AddField(
            model_name='coordinator',
            name='public_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinators', to='users.PublicService'),
        ),
        migrations.AddField(
            model_name='coordinator',
            name='social_service_center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinators', to='users.SocialServiceCenter'),
        ),
    ]
